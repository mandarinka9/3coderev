/*
Напишите программу-телеграф, которая принимает от пользователя сообщение и выводит
его на экран в виде последовательности точек и тире.
*/
#include <iostream>
#include <string>
#include <unordered_map>

// Функция для преобразования символа в код Морзе
std::string toMorse(char symbol) {
    // Используем unordered_map для эффективного поиска
    static const std::unordered_map<char, std::string> morseMap = {
        {'А', ".-"}, {'Б', "-..."}, {'В', ".--"}, {'Г', "--."}, {'Д', "-.."},
        {'Е', "."}, {'Ж', "...-"}, {'З', "--.."}, {'И', ".."}, {'Й', ".---"},
        {'К', "-.-"}, {'Л', ".-.."}, {'М', "--"}, {'Н', "-."}, {'О', "---"},
        {'П', ".--."}, {'Р', ".-."}, {'С', "..."}, {'Т', "-"}, {'У', "..-"},
        {'Ф', "..-."}, {'Х', "...."}, {'Ц', "-.-."}, {'Ч', "--.-"}, {'Ш', "----"},
        {'Щ', "--.--"}, {'Ъ', ".--.-."}, {'Ы', "-.--"}, {'Ь', "-..-"},
        {'Э', "..-.."}, {'Ю', "..--"}, {'Я', ".-.."}
    };

    // Ищем символ в карте и возвращаем его код Морзе
    auto it = morseMap.find(toupper(symbol));
    return (it != morseMap.end()) ? it->second : "";
}

int main() {
    std::string input;
    std::cout << "Введите текст для преобразования в азбуку Морзе:\n";
    std::getline(std::cin, input);
    std::cout << "\nКод Морзе:\n";

    // Обрабатываем каждый символ
    for (char symbol : input) {
        if (symbol == ' ') {
            std::cout << "/ ";
            continue;
        }

        std::string morse = toMorse(symbol);
        if (!morse.empty()) {
            std::cout << morse << " ";
        }
    }

    return 0;
}
